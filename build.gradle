plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = '17'

// Specify main class for Spring Boot
springBoot {
    mainClass = 'com.example.docparser.DocParserApplication'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    temporalVersion = '1.20.1'
    awsSdkVersion = '2.21.29'
    jacksonVersion = '2.15.2'
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Temporal
    implementation "io.temporal:temporal-sdk:${temporalVersion}"
    implementation "io.temporal:temporal-spring-boot-starter-alpha:${temporalVersion}"
    
    // AWS SDK removed for demo (using local filesystem)
    
    // JSON Processing
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    
    // CSV Processing
    implementation 'org.apache.commons:commons-csv:1.10.0'
    
    // Database
    implementation 'org.postgresql:postgresql'
    implementation 'com.zaxxer:HikariCP'
    
    // Caching for deduplication
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    
    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // API Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    
    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "io.temporal:temporal-testing:${temporalVersion}"
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:1.19.3"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// Task to run the application
task runApp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.docparser.DocParserApplication'
}

// Task to run worker
task runWorker(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.docparser.worker.TemporalWorkerApplication'
}

// Generate gradle wrapper
wrapper {
    gradleVersion = '8.4'
    distributionType = Wrapper.DistributionType.BIN
}
