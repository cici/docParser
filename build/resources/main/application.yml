spring:
  application:
    name: doc-parser
  profiles:
    active: local
  
  # Database configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/docparser
    username: ${DB_USERNAME:docparser}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
  
  # Cache configuration
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=100000,expireAfterWrite=1h

# Temporal Configuration
temporal:
  cloud:
    endpoint: ${TEMPORAL_ENDPOINT:}
    namespace: ${TEMPORAL_NAMESPACE:default}
    client-cert: ${TEMPORAL_CLIENT_CERT_PATH:}
    client-key: ${TEMPORAL_CLIENT_KEY_PATH:}
  task-queue: ${TEMPORAL_TASK_QUEUE:file-processing}
  worker:
    max-concurrent-activities: ${TEMPORAL_MAX_CONCURRENT_ACTIVITIES:50}
    max-concurrent-workflows: ${TEMPORAL_MAX_CONCURRENT_WORKFLOWS:20}

# Application Configuration
app:
  file-processing:
    base-directory: ${FILE_BASE_DIR:./data}
    default-chunk-size-mb: 100
    max-parallel-chunks: 10
    enable-deduplication: true
    batch-size: 1000
    
  monitoring:
    progress-update-interval: 30s
    metrics-retention-days: 30

# Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging configuration
logging:
  level:
    com.example.docparser: INFO
    io.temporal: WARN
    org.springframework: WARN
    org.hibernate: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level [%X{jobId}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{jobId}] %logger{36} - %msg%n"

---
# Local development profile
spring:
  config:
    activate:
      on-profile: local
  
temporal:
  cloud:
    endpoint: localhost:7233
    namespace: default

# Local development - no AWS needed

logging:
  level:
    com.example.docparser: DEBUG

---
# Docker profile
spring:
  config:
    activate:
      on-profile: docker
  
  # Database configuration for Docker
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:docparser}
    username: ${DB_USERNAME:docparser}
    password: ${DB_PASSWORD:password}

temporal:
  cloud:
    endpoint: ${TEMPORAL_ENDPOINT:temporal:7233}
    namespace: ${TEMPORAL_NAMESPACE:default}

logging:
  level:
    com.example.docparser: INFO
    io.temporal: WARN

---
# Production profile
spring:
  config:
    activate:
      on-profile: production

temporal:
  worker:
    max-concurrent-activities: 100
    max-concurrent-workflows: 50

app:
  file-processing:
    max-parallel-chunks: 20

logging:
  level:
    com.example.docparser: INFO
    root: WARN
